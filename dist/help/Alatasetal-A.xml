<method>

	<name>Alatasetal</name>

	<reference>  

		<ref>B. Alatas and E. Akin. An efficient genetic algorithm for automated mining of both positive and negative quantitative association rules. Soft Computing, 10:230–237 (2006).</ref>

	</reference>

	<generalDescription>  

		<type>Association Rules Mining by means of Genetic Algorithms</type>

		<objective>The genetic algorithm proposed by Alatas et al. is conceived for mining both positive and negative quantitative association rules.</objective>

		<howWork>The genetic learning is performed iteratively until a maximum number of evaluations is reached.
First, an initial population called uniform population is created by splitting a given number of seed chromosomes into two or more segments depending on a user-specified number of dividing points.
The segments of each chromosome are then inverted individually, i. e., the values of their genes are basically changed according to a fixed scheme.
The result is a population of a determined size in which all the combinations of these segments are computed for each seed chromosome.
Then, within a double loop, the genetic operators are applied to chromosomes.
The fitness values of individuals may be decreased at the end of the first internal loop whenever in the current population they involve records covered by the previous best rules.
Finally, to increase the quality of the final best rules, the amplitudes of intervals may also be decreased until the number of covered records be smaller than the records covered by their original intervals.</howWork>

		<parameterSpec>  
			
			<param>Number of Generations: the maximum number of generations to accomplish.</param>
			<param>Initial Random Chromosomes: the number of initial chromosomes randomly generated.</param>
			<param>r-Dividing Points: the number of parts in which each random chromosome is divided for applying inversion operations.</param>
			<param>Tournament Size: the size of tournament for selecting the fittest chromosome in the current population.</param>
			<param>Probability of Crossover: the probability of crossover.</param>
			<param>Minimum Probability of Mutation: the minimum probability of the adaptive mutation operator.</param>
			<param>Maximum Probability of Mutation: the maximum probability of the adaptive mutation operator.</param>
			<param>Importance of Rules Support: the factor for tuning the importance of the rule support.</param>
			<param>Importance of Rules Confidence: the factor for tuning the importance of the rule confidence.</param>
			<param>Importance of Number of Involved Attributes: the factor for tuning the importance of the number of involved attributes.</param>
			<param>Importance of Intervals Amplitude: the factor for tuning the importance of the intervals amplitude.</param>
			<param>Importance of Number of Records Already Covered: the factor for tuning the importance of the number of records already covered.</param>
			<param>Amplitude Factor: the amplitude factor related to each attribute of the database.</param>
				
		</parameterSpec>

		<properties>

			<continuous>Yes</continuous>

			<discretized>Yes</discretized>

			<integer>Yes</integer>

			<nominal>Yes</nominal>

			<valueLess>No</valueLess>

			<impreciseValue>No</impreciseValue>

		</properties>

	</generalDescription>

	<example>
Problem type: Association Rules
Method: Alatasetal
Dataset: basketball
Parameters: default values (seed = 1286082570)


After the execution of RunKeel.jar we can see XML representations of the mined association rules along with the values concerning the measures of interest, respectively, in:


&quot;results/Asso-Alatasetal.basketball/result0s0.tra&quot;


&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;rules&gt;
&lt;rule id=&quot;0&quot;&gt;
&lt;antecedents&gt;
&lt;attribute name=&quot;assists_per_minuteReal&quot; value=&quot;NOT [0.2772, 0.3436]&quot;/&gt;
&lt;/antecedents&gt;
&lt;consequents&gt;
&lt;attribute name=&quot;ageInteger&quot; value=&quot;[22.0, 35.0]&quot;/&gt;
&lt;attribute name=&quot;points_per_minuteReal&quot; value=&quot;NOT [0.6319, 0.829]&quot;/&gt;
&lt;/consequents&gt;
&lt;/rule&gt;
... ... ... ...
&lt;/rules&gt;


&quot;results/Asso-Alatasetal.basketball/result0s0.tst&quot;


&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;values&gt;
&lt;rule id=&quot;0&quot; rule_support=&quot;0.99&quot; antecedent_support=&quot;1.0&quot; consequent_support=&quot;0.99&quot; confidence=&quot;0.99&quot; lift=&quot;1.0&quot; conviction=&quot;1.0&quot; certainFactor=&quot;0.0&quot; netConf=&quot;0.0&quot; yulesQ=&quot;0.0&quot; nAttributes=&quot;3&quot;/&gt;
... ... ... ...
&lt;/values&gt;

Number of Association Rules generated: 11
Average Support: 0.99
Average Confidence: 1.0
Average Lift: 1.0
Average Conviction: 1.0
Average Certain Factor: 0.0
Average Netconf: 0.0
Average YulesQ: 0.0
Average Number of Antecedents: 3.1
Number of Covered Records (%): 100.0	

&quot;results/Asso-Alatasetal.basketball/result0s0e0.tst&quot;


&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;values&gt;
Support	antecedent_support	consequent_support	Confidence	Lift	Conv	CF	NetConf	YulesQ	nAttributes
0.99  	      1.0	                 0.99	          0.99	        1.0	 1.0    0.0      0.0	 0.0	   3
... ... ... ...
&lt;/values&gt;

We can also see some relevant information on-screen:


Initializing Uniform Population... done.
Computing Generation #1... done.
Computing Generation #2... done.
... ... ... ...
Computing Generation #520... done.


Number of Association Rules generated: 11
Average Support: 0.99
Average Confidence: 1.0
Average Lift: 1.0
Average Conviction: 1.0
Average Certain Factor: 0.0
Average Netconf: 0.0
Average YulesQ: 0.0
Average Number of Antecedents: 3.1
Number of Covered Records (%): 100.0	

Algorithm Finished

1.046 seconds

</example>

</method>
